from typing import Optional, List
from pydantic import BaseModel
import sys
import os
import json
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from typing import List, Tuple
from ImportDB2Faiss import VetFAISS
from core.extract_parameters import ExtractParameters

class MessageContent(BaseModel):
    role: Optional[str] = ""
    type: Optional[str] = ""
    content: Optional[str] = ""
    detail: Optional[dict] = {}
    image_url: Optional[dict] = {}

class Parameters(BaseModel):
    stream: Optional[bool] = False
    temperature: Optional[float] = 0.1
    max_tokens: Optional[int] = 4096
    top_p: Optional[float] = 0.1
    frequency_penalty: Optional[float] = 1
    presence_penalty: Optional[float] = 0
    other_model_specific_parameters: Optional[str] = ""

class ExtractParametersNew:
    def _extract_questions_and_history(request_messages_list: List[dict]) -> Tuple[str, str]:
        if not request_messages_list:
            return "", ""

        # Extract the last user message (Ensures it is a 'user' message)
        questions = ""
        for message in reversed(request_messages_list):
            if 'user' in message:
                questions = message['user']
                break  # Stop at the latest user message

        # Extract history (Excluding the last user message)
        history = "\n".join([
            str(request) for request in request_messages_list[:-1]
        ])

        return questions, history


class RequestBody(BaseModel):
    requestid: str = ""
    sessionid: str = ""
    modelid: Optional[str] = "gpt-4o"
    messages: Optional[List[MessageContent]] = []
    parameters: Optional[Parameters] = Parameters()
    refdata: Optional[list] = []

# Create messages
messages = [
    MessageContent(
        role="user",
        content="""‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏≤‡∏ô‡∏µ‡∏≠‡πâ‡∏ß‡∏ô‡∏°‡∏≤‡∏Å""",
        detail={},
        image_url={}
    ),
    MessageContent(
        role="assistant",
        content="""‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡∏µ‡πä‡∏¢‡∏Å ‡∏õ‡∏≤‡∏Å‡πÄ‡∏Å‡∏£‡πá‡∏î! Nhamaew Pet Ai ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏Ñ‡πà‡∏∞

‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡∏µ‡πä‡∏¢‡∏Å‡πÉ‡∏´‡πâ‡∏°‡∏≤ ‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏°‡∏ß‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏û‡∏µ‡∏¢‡∏á 2 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á‡∏î‡∏π‡∏≠‡πâ‡∏ß‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏¢‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏Ñ‡πà‡∏∞ ‡∏°‡∏≤‡∏î‡∏π‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á:

1. **‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£**: 
   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á ‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏π‡∏Å‡πÅ‡∏°‡∏ß‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏•‡∏π‡∏Å‡πÅ‡∏°‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
   - ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏ô‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏Ç‡∏°‡∏±‡∏ô‡∏™‡∏π‡∏á

2. **‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢**:
   - ‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡πÄ‡∏•‡πá‡∏Å ‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏°‡∏ß ‡πÄ‡∏ä‡πà‡∏ô ‡∏•‡∏π‡∏Å‡∏ö‡∏≠‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏ú‡∏≤‡∏ú‡∏•‡∏≤‡∏ç‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô

3. **‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û**:
   - ‡∏´‡∏≤‡∏Å‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏î‡∏π‡∏≠‡πâ‡∏ß‡∏ô‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏≥‡∏ö‡∏≤‡∏Å ‡∏Ñ‡∏ß‡∏£‡∏û‡∏≤‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏∞

4. **‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥**:
   - ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏õ‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á

Nhamaew Pet Ai ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡πÉ‡∏î ‡πÜ ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡∏µ‡πä‡∏¢‡∏Å‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏Ñ‡πà‡∏∞!""",
        detail={},
        image_url={}
    ),
    MessageContent(
        role="user",
        content="""‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏£""",
        detail={},
        image_url={}
    ),
    MessageContent(
        role="assistant",
        content="""‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡∏µ‡πä‡∏¢‡∏Å ‡∏õ‡∏≤‡∏Å‡πÄ‡∏Å‡∏£‡πá‡∏î! Nhamaew Pet Ai ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏Ñ‡πà‡∏∞

‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏¢‡∏∏ 2 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ô‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ:

1. **‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏•‡∏π‡∏Å‡πÅ‡∏°‡∏ß**:
   - ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡πÅ‡∏°‡∏ß‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡πÄ‡∏ä‡πà‡∏ô ‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡∏™‡∏π‡∏á ‡πÅ‡∏Ñ‡∏•‡πÄ‡∏ã‡∏µ‡∏¢‡∏° ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô‡∏ï‡πà‡∏≤‡∏á ‡πÜ
   - ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏•‡∏π‡∏Å‡πÅ‡∏°‡∏ß‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö‡πÅ‡∏´‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡∏µ‡∏¢‡∏Å ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞

2. **‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏≠‡∏≤‡∏´‡∏≤‡∏£**:
   - ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ö‡∏ô‡∏ö‡∏£‡∏£‡∏à‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏Ç‡∏≠‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏≥‡∏ô‡∏∂‡∏á‡∏ñ‡∏∂‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ
   - ‡πÅ‡∏ö‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏•‡πá‡∏Å ‡πÜ ‡∏´‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡πà‡∏≠‡∏¢‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ

3. **‡∏ô‡πâ‡∏≥‡∏™‡∏∞‡∏≠‡∏≤‡∏î**:
   - ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ô‡πâ‡∏≥‡∏õ‡∏£‡∏∞‡∏õ‡∏≤‡πÄ‡∏™‡∏°‡∏≠ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á

4. **‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏ô**:
   - ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏ô‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÑ‡∏Ç‡∏°‡∏±‡∏ô‡∏™‡∏π‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏î‡∏µ

Nhamaew Pet Ai ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≠‡∏á‡∏£‡∏≤‡∏ô‡∏µ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏î‡∏µ‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡∏µ‡πä‡∏¢‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢‡πÉ‡∏î ‡πÜ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏Ñ‡πà‡∏∞!""",
        detail={},
        image_url={}
    ),
    MessageContent(
        role="system",
        content="""Simple System""",
        detail={},
        image_url={}
    ),
        MessageContent(
        role="user",
        content="""‡∏£‡∏≤‡∏ô‡∏µ‡∏õ‡∏ß‡∏î‡∏ï‡∏±‡∏ß""",
        detail={},
        image_url={}
    )
]

# Create request body
request_body = RequestBody(
    requestid="unique_request_id",
    sessionid="session_12345",
    messages=messages
)

'''


# Function to search vet documents based on user query
def search_vet_documents(request_body):
    # Extract content where role is 'user'
    user_message = next((message.content for message in request_body.messages if message.role == "user"), None)
    print(user_message)
    if user_message:
        query = user_message  # Use content of user message as query
        print(f"query {query}")
        # Assuming vet_faiss.search_vet_doc() is a function you have access to
        search_results = VetFAISS.search_vet_doc(query, top_k=2)

        # Print the search results
        print("\nüîç Search Results for:", query)
        for result in search_results:
            print(result)  # Modify based on the actual structure of the results
    else:
        print("No user message found to process")

# Call the function
search_vet_documents(request_body)
'''


system_prompt, request_messages_list, context = ExtractParameters._process_messages(messages)
print("=" * 50)
print("üîπ SYSTEM PROMPT:")
print(system_prompt)
print("=" * 50)

print("\nüîπ REQUEST MESSAGES:")
print(json.dumps(request_messages_list, indent=4, ensure_ascii=False))  # Pretty print JSON

print("\nüîπ CONTEXT:")
print(json.dumps(context, indent=4, ensure_ascii=False))  # Pretty print JSON
print("=" * 50)


question,history = ExtractParameters._extract_questions_and_history(request_messages_list)

print(f"Question {question}")
'''
print(f"History")
print(json.dumps(history, indent=4, ensure_ascii=False)) 
'''